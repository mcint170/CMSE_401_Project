
Calculations done with cpu

Loading in Datasets

Batch Size: 100
Files already downloaded and verified
Files already downloaded and verified

Viewing Random Training Images

  dog  deer  bird plane

Creating Neural Network


Create Loss function and optimizer


Training Network

[1,   100] loss: 0.115
[1,   200] loss: 0.115
[1,   300] loss: 0.115
[1,   400] loss: 0.114
[1,   500] loss: 0.113
[2,   100] loss: 0.112
[2,   200] loss: 0.108
[2,   300] loss: 0.103
[2,   400] loss: 0.101
[2,   500] loss: 0.099
[3,   100] loss: 0.097
[3,   200] loss: 0.094
[3,   300] loss: 0.093
[3,   400] loss: 0.091
[3,   500] loss: 0.089
[4,   100] loss: 0.087
[4,   200] loss: 0.085
[4,   300] loss: 0.083
[4,   400] loss: 0.081
[4,   500] loss: 0.080
[5,   100] loss: 0.079
[5,   200] loss: 0.079
[5,   300] loss: 0.077
[5,   400] loss: 0.077
[5,   500] loss: 0.077
[6,   100] loss: 0.076
[6,   200] loss: 0.074
[6,   300] loss: 0.074
[6,   400] loss: 0.073
[6,   500] loss: 0.073
[7,   100] loss: 0.072
[7,   200] loss: 0.071
[7,   300] loss: 0.070
[7,   400] loss: 0.071
[7,   500] loss: 0.070
[8,   100] loss: 0.069
[8,   200] loss: 0.069
[8,   300] loss: 0.068
[8,   400] loss: 0.068
[8,   500] loss: 0.068
[9,   100] loss: 0.067
[9,   200] loss: 0.067
[9,   300] loss: 0.066
[9,   400] loss: 0.067
[9,   500] loss: 0.065
[10,   100] loss: 0.066
[10,   200] loss: 0.064
[10,   300] loss: 0.064
[10,   400] loss: 0.063
[10,   500] loss: 0.064
[11,   100] loss: 0.063
[11,   200] loss: 0.062
[11,   300] loss: 0.062
[11,   400] loss: 0.062
[11,   500] loss: 0.061
[12,   100] loss: 0.061
[12,   200] loss: 0.061
[12,   300] loss: 0.060
[12,   400] loss: 0.060
[12,   500] loss: 0.060
[13,   100] loss: 0.059
[13,   200] loss: 0.059
[13,   300] loss: 0.058
[13,   400] loss: 0.057
[13,   500] loss: 0.058
[14,   100] loss: 0.058
[14,   200] loss: 0.058
[14,   300] loss: 0.057
[14,   400] loss: 0.056
[14,   500] loss: 0.056
[15,   100] loss: 0.056
[15,   200] loss: 0.055
[15,   300] loss: 0.055
[15,   400] loss: 0.056
[15,   500] loss: 0.056
[16,   100] loss: 0.055
[16,   200] loss: 0.054
[16,   300] loss: 0.054
[16,   400] loss: 0.053
[16,   500] loss: 0.054
[17,   100] loss: 0.052
[17,   200] loss: 0.053
[17,   300] loss: 0.052
[17,   400] loss: 0.053
[17,   500] loss: 0.052
[18,   100] loss: 0.051
[18,   200] loss: 0.050
[18,   300] loss: 0.051
[18,   400] loss: 0.052
[18,   500] loss: 0.052
[19,   100] loss: 0.050
[19,   200] loss: 0.050
[19,   300] loss: 0.051
[19,   400] loss: 0.050
[19,   500] loss: 0.051
[20,   100] loss: 0.049
[20,   200] loss: 0.049
[20,   300] loss: 0.049
[20,   400] loss: 0.049
[20,   500] loss: 0.049

Finished Training


Save trained Model


Test the network

Test on Some test images
GroundTruth:    cat  ship  ship plane
Predicted:    cat  ship  ship  ship

 Test on all images
Accuracy of the network on the 10000 test images: 64 %

Class Accuracy

Accuracy of plane : 72 %
Accuracy of   car : 78 %
Accuracy of  bird : 34 %
Accuracy of   cat : 39 %
Accuracy of  deer : 69 %
Accuracy of   dog : 43 %
Accuracy of  frog : 66 %
Accuracy of horse : 78 %
Accuracy of  ship : 77 %
Accuracy of truck : 72 %

real time:2536.54
Calculations done with cpu

Loading in Datasets

Batch Size: 100
Files already downloaded and verified
Files already downloaded and verified

Viewing Random Training Images

plane  bird  bird  ship

Creating Neural Network


Create Loss function and optimizer


Training Network

[1,   100] loss: 0.115
[1,   200] loss: 0.115
[1,   300] loss: 0.115
[1,   400] loss: 0.115
[1,   500] loss: 0.114
[2,   100] loss: 0.112
[2,   200] loss: 0.108
[2,   300] loss: 0.105
[2,   400] loss: 0.100
[2,   500] loss: 0.099
[3,   100] loss: 0.097
[3,   200] loss: 0.095
[3,   300] loss: 0.093
[3,   400] loss: 0.092
[3,   500] loss: 0.090
[4,   100] loss: 0.088
[4,   200] loss: 0.086
[4,   300] loss: 0.085
[4,   400] loss: 0.083
[4,   500] loss: 0.083
[5,   100] loss: 0.081
[5,   200] loss: 0.080
[5,   300] loss: 0.080
[5,   400] loss: 0.079
[5,   500] loss: 0.079
[6,   100] loss: 0.078
[6,   200] loss: 0.077
[6,   300] loss: 0.076
[6,   400] loss: 0.077
[6,   500] loss: 0.075
[7,   100] loss: 0.074
[7,   200] loss: 0.075
[7,   300] loss: 0.074
[7,   400] loss: 0.073
[7,   500] loss: 0.072
[8,   100] loss: 0.071
[8,   200] loss: 0.071
[8,   300] loss: 0.071
[8,   400] loss: 0.071
[8,   500] loss: 0.070
[9,   100] loss: 0.070
[9,   200] loss: 0.069
[9,   300] loss: 0.069
[9,   400] loss: 0.068
[9,   500] loss: 0.067
[10,   100] loss: 0.067
[10,   200] loss: 0.068
[10,   300] loss: 0.067
[10,   400] loss: 0.066
[10,   500] loss: 0.066
[11,   100] loss: 0.065
[11,   200] loss: 0.064
[11,   300] loss: 0.065
[11,   400] loss: 0.065
[11,   500] loss: 0.064
[12,   100] loss: 0.063
[12,   200] loss: 0.062
[12,   300] loss: 0.063
[12,   400] loss: 0.061
[12,   500] loss: 0.062
[13,   100] loss: 0.061
[13,   200] loss: 0.061
[13,   300] loss: 0.061
[13,   400] loss: 0.062
[13,   500] loss: 0.060
[14,   100] loss: 0.059
[14,   200] loss: 0.059
[14,   300] loss: 0.059
[14,   400] loss: 0.059
[14,   500] loss: 0.059
[15,   100] loss: 0.058
[15,   200] loss: 0.058
[15,   300] loss: 0.057
[15,   400] loss: 0.057
[15,   500] loss: 0.057
[16,   100] loss: 0.057
[16,   200] loss: 0.056
[16,   300] loss: 0.055
[16,   400] loss: 0.056
[16,   500] loss: 0.056
[17,   100] loss: 0.054
[17,   200] loss: 0.054
[17,   300] loss: 0.055
[17,   400] loss: 0.055
[17,   500] loss: 0.054
[18,   100] loss: 0.054
[18,   200] loss: 0.053
[18,   300] loss: 0.054
[18,   400] loss: 0.053
[18,   500] loss: 0.053
[19,   100] loss: 0.052
[19,   200] loss: 0.053
[19,   300] loss: 0.052
[19,   400] loss: 0.052
[19,   500] loss: 0.051
[20,   100] loss: 0.051
[20,   200] loss: 0.050
[20,   300] loss: 0.052
[20,   400] loss: 0.050
[20,   500] loss: 0.050

Finished Training


Save trained Model


Test the network

Test on Some test images
GroundTruth:    cat  ship  ship plane
Predicted:    cat  ship  ship plane

 Test on all images
Accuracy of the network on the 10000 test images: 63 %

Class Accuracy

Accuracy of plane : 65 %
Accuracy of   car : 81 %
Accuracy of  bird : 42 %
Accuracy of   cat : 32 %
Accuracy of  deer : 36 %
Accuracy of   dog : 46 %
Accuracy of  frog : 83 %
Accuracy of horse : 87 %
Accuracy of  ship : 77 %
Accuracy of truck : 68 %

real time:2535.02
Calculations done with cpu

Loading in Datasets

Batch Size: 100
Files already downloaded and verified
Files already downloaded and verified

Viewing Random Training Images

 deer   car  deer  ship

Creating Neural Network


Create Loss function and optimizer


Training Network

[1,   100] loss: 0.115
[1,   200] loss: 0.115
[1,   300] loss: 0.115
[1,   400] loss: 0.115
[1,   500] loss: 0.114
[2,   100] loss: 0.113
[2,   200] loss: 0.111
[2,   300] loss: 0.108
[2,   400] loss: 0.105
[2,   500] loss: 0.102
[3,   100] loss: 0.101
[3,   200] loss: 0.098
[3,   300] loss: 0.097
[3,   400] loss: 0.094
[3,   500] loss: 0.093
[4,   100] loss: 0.091
[4,   200] loss: 0.089
[4,   300] loss: 0.087
[4,   400] loss: 0.085
[4,   500] loss: 0.085
[5,   100] loss: 0.082
[5,   200] loss: 0.081
[5,   300] loss: 0.080
[5,   400] loss: 0.079
[5,   500] loss: 0.079
[6,   100] loss: 0.077
[6,   200] loss: 0.078
[6,   300] loss: 0.076
[6,   400] loss: 0.075
[6,   500] loss: 0.075
[7,   100] loss: 0.074
[7,   200] loss: 0.073
[7,   300] loss: 0.074
[7,   400] loss: 0.071
[7,   500] loss: 0.072
[8,   100] loss: 0.072
[8,   200] loss: 0.070
[8,   300] loss: 0.069
[8,   400] loss: 0.069
[8,   500] loss: 0.068
[9,   100] loss: 0.068
[9,   200] loss: 0.068
[9,   300] loss: 0.067
[9,   400] loss: 0.068
[9,   500] loss: 0.067
[10,   100] loss: 0.066
[10,   200] loss: 0.066
[10,   300] loss: 0.066
[10,   400] loss: 0.066
[10,   500] loss: 0.064
[11,   100] loss: 0.065
[11,   200] loss: 0.063
[11,   300] loss: 0.063
[11,   400] loss: 0.063
[11,   500] loss: 0.062
[12,   100] loss: 0.062
[12,   200] loss: 0.061
[12,   300] loss: 0.062
[12,   400] loss: 0.061
[12,   500] loss: 0.061
[13,   100] loss: 0.060
[13,   200] loss: 0.060
[13,   300] loss: 0.060
[13,   400] loss: 0.059
[13,   500] loss: 0.059
[14,   100] loss: 0.059
[14,   200] loss: 0.059
[14,   300] loss: 0.058
[14,   400] loss: 0.058
[14,   500] loss: 0.058
[15,   100] loss: 0.058
[15,   200] loss: 0.057
[15,   300] loss: 0.057
[15,   400] loss: 0.057
[15,   500] loss: 0.056
[16,   100] loss: 0.056
[16,   200] loss: 0.056
[16,   300] loss: 0.055
[16,   400] loss: 0.055
[16,   500] loss: 0.055
[17,   100] loss: 0.055
[17,   200] loss: 0.054
[17,   300] loss: 0.054
[17,   400] loss: 0.054
[17,   500] loss: 0.054
[18,   100] loss: 0.053
[18,   200] loss: 0.052
[18,   300] loss: 0.053
[18,   400] loss: 0.052
[18,   500] loss: 0.053
[19,   100] loss: 0.052
[19,   200] loss: 0.052
[19,   300] loss: 0.052
[19,   400] loss: 0.052
[19,   500] loss: 0.052
[20,   100] loss: 0.050
[20,   200] loss: 0.050
[20,   300] loss: 0.051
[20,   400] loss: 0.051
[20,   500] loss: 0.051

Finished Training


Save trained Model


Test the network

Test on Some test images
GroundTruth:    cat  ship  ship plane
Predicted:    cat  ship  ship  ship

 Test on all images
Accuracy of the network on the 10000 test images: 62 %

Class Accuracy

Accuracy of plane : 65 %
Accuracy of   car : 71 %
Accuracy of  bird : 34 %
Accuracy of   cat : 41 %
Accuracy of  deer : 46 %
Accuracy of   dog : 50 %
Accuracy of  frog : 62 %
Accuracy of horse : 78 %
Accuracy of  ship : 79 %
Accuracy of truck : 68 %

real time:2539.94
Calculations done with cpu

Loading in Datasets

Batch Size: 100
Files already downloaded and verified
Files already downloaded and verified

Viewing Random Training Images

plane  ship   car   cat

Creating Neural Network


Create Loss function and optimizer


Training Network

[1,   100] loss: 0.115
[1,   200] loss: 0.115
[1,   300] loss: 0.115
[1,   400] loss: 0.114
[1,   500] loss: 0.114
[2,   100] loss: 0.112
[2,   200] loss: 0.108
[2,   300] loss: 0.104
[2,   400] loss: 0.101
[2,   500] loss: 0.099
[3,   100] loss: 0.096
[3,   200] loss: 0.094
[3,   300] loss: 0.092
[3,   400] loss: 0.091
[3,   500] loss: 0.090
[4,   100] loss: 0.087
[4,   200] loss: 0.086
[4,   300] loss: 0.085
[4,   400] loss: 0.084
[4,   500] loss: 0.082
[5,   100] loss: 0.081
[5,   200] loss: 0.080
[5,   300] loss: 0.079
[5,   400] loss: 0.078
[5,   500] loss: 0.077
[6,   100] loss: 0.076
[6,   200] loss: 0.075
[6,   300] loss: 0.075
[6,   400] loss: 0.075
[6,   500] loss: 0.074
[7,   100] loss: 0.072
[7,   200] loss: 0.073
[7,   300] loss: 0.072
[7,   400] loss: 0.071
[7,   500] loss: 0.071
[8,   100] loss: 0.070
[8,   200] loss: 0.069
[8,   300] loss: 0.070
[8,   400] loss: 0.069
[8,   500] loss: 0.070
[9,   100] loss: 0.069
[9,   200] loss: 0.067
[9,   300] loss: 0.068
[9,   400] loss: 0.067
[9,   500] loss: 0.066
[10,   100] loss: 0.067
[10,   200] loss: 0.065
[10,   300] loss: 0.065
[10,   400] loss: 0.065
[10,   500] loss: 0.064
[11,   100] loss: 0.064
[11,   200] loss: 0.063
[11,   300] loss: 0.063
[11,   400] loss: 0.063
[11,   500] loss: 0.063
[12,   100] loss: 0.062
[12,   200] loss: 0.062
[12,   300] loss: 0.061
[12,   400] loss: 0.061
[12,   500] loss: 0.060
[13,   100] loss: 0.059
[13,   200] loss: 0.059
[13,   300] loss: 0.061
[13,   400] loss: 0.059
[13,   500] loss: 0.059
[14,   100] loss: 0.058
[14,   200] loss: 0.058
[14,   300] loss: 0.058
[14,   400] loss: 0.057
[14,   500] loss: 0.058
[15,   100] loss: 0.057
[15,   200] loss: 0.057
[15,   300] loss: 0.056
[15,   400] loss: 0.057
[15,   500] loss: 0.056
[16,   100] loss: 0.055
[16,   200] loss: 0.055
[16,   300] loss: 0.054
[16,   400] loss: 0.055
[16,   500] loss: 0.055
[17,   100] loss: 0.054
[17,   200] loss: 0.053
[17,   300] loss: 0.055
[17,   400] loss: 0.054
[17,   500] loss: 0.053
[18,   100] loss: 0.052
[18,   200] loss: 0.053
[18,   300] loss: 0.053
[18,   400] loss: 0.052
[18,   500] loss: 0.053
[19,   100] loss: 0.051
[19,   200] loss: 0.052
[19,   300] loss: 0.052
[19,   400] loss: 0.051
[19,   500] loss: 0.051
[20,   100] loss: 0.051
[20,   200] loss: 0.050
[20,   300] loss: 0.051
[20,   400] loss: 0.051
[20,   500] loss: 0.049

Finished Training


Save trained Model


Test the network

Test on Some test images
GroundTruth:    cat  ship  ship plane
Predicted:    cat   car  ship  ship

 Test on all images
Accuracy of the network on the 10000 test images: 63 %

Class Accuracy

Accuracy of plane : 70 %
Accuracy of   car : 71 %
Accuracy of  bird : 50 %
Accuracy of   cat : 44 %
Accuracy of  deer : 59 %
Accuracy of   dog : 46 %
Accuracy of  frog : 79 %
Accuracy of horse : 75 %
Accuracy of  ship : 72 %
Accuracy of truck : 62 %

real time:2536.79
srun: Job 21096122 step creation temporarily disabled, retrying (Requested nodes are busy)
srun: Step created for job 21096122
Calculations done with cpu

Loading in Datasets

Batch Size: 100
Files already downloaded and verified
Files already downloaded and verified

Viewing Random Training Images

 frog plane plane horse

Creating Neural Network


Create Loss function and optimizer


Training Network

[1,   100] loss: 0.115
[1,   200] loss: 0.115
[1,   300] loss: 0.115
[1,   400] loss: 0.115
[1,   500] loss: 0.115
[2,   100] loss: 0.114
[2,   200] loss: 0.113
[2,   300] loss: 0.111
[2,   400] loss: 0.106
[2,   500] loss: 0.102
[3,   100] loss: 0.099
[3,   200] loss: 0.096
[3,   300] loss: 0.095
[3,   400] loss: 0.092
[3,   500] loss: 0.090
[4,   100] loss: 0.089
[4,   200] loss: 0.086
[4,   300] loss: 0.085
[4,   400] loss: 0.085
[4,   500] loss: 0.083
[5,   100] loss: 0.082
[5,   200] loss: 0.081
[5,   300] loss: 0.080
[5,   400] loss: 0.079
[5,   500] loss: 0.079
[6,   100] loss: 0.078
[6,   200] loss: 0.077
[6,   300] loss: 0.077
[6,   400] loss: 0.075
[6,   500] loss: 0.076
[7,   100] loss: 0.074
[7,   200] loss: 0.074
[7,   300] loss: 0.074
[7,   400] loss: 0.073
[7,   500] loss: 0.072
[8,   100] loss: 0.072
[8,   200] loss: 0.072
[8,   300] loss: 0.071
[8,   400] loss: 0.070
[8,   500] loss: 0.070
[9,   100] loss: 0.069
[9,   200] loss: 0.069
[9,   300] loss: 0.068
[9,   400] loss: 0.069
[9,   500] loss: 0.069
[10,   100] loss: 0.068
[10,   200] loss: 0.066
[10,   300] loss: 0.066
[10,   400] loss: 0.066
[10,   500] loss: 0.066
[11,   100] loss: 0.064
[11,   200] loss: 0.065
[11,   300] loss: 0.064
[11,   400] loss: 0.064
[11,   500] loss: 0.063
[12,   100] loss: 0.063
[12,   200] loss: 0.063
[12,   300] loss: 0.063
[12,   400] loss: 0.062
[12,   500] loss: 0.061
[13,   100] loss: 0.061
[13,   200] loss: 0.061
[13,   300] loss: 0.060
[13,   400] loss: 0.061
[13,   500] loss: 0.060
[14,   100] loss: 0.059
[14,   200] loss: 0.059
[14,   300] loss: 0.059
[14,   400] loss: 0.059
[14,   500] loss: 0.059
[15,   100] loss: 0.057
[15,   200] loss: 0.057
[15,   300] loss: 0.058
[15,   400] loss: 0.057
[15,   500] loss: 0.057
[16,   100] loss: 0.056
[16,   200] loss: 0.055
[16,   300] loss: 0.056
[16,   400] loss: 0.056
[16,   500] loss: 0.055
[17,   100] loss: 0.054
[17,   200] loss: 0.055
[17,   300] loss: 0.054
[17,   400] loss: 0.055
[17,   500] loss: 0.053
[18,   100] loss: 0.054
[18,   200] loss: 0.053
[18,   300] loss: 0.053
[18,   400] loss: 0.052
[18,   500] loss: 0.053
[19,   100] loss: 0.051
[19,   200] loss: 0.051
[19,   300] loss: 0.053
[19,   400] loss: 0.052
[19,   500] loss: 0.051
[20,   100] loss: 0.052
[20,   200] loss: 0.051
[20,   300] loss: 0.050
[20,   400] loss: 0.052
[20,   500] loss: 0.051

Finished Training


Save trained Model


Test the network

Test on Some test images
GroundTruth:    cat  ship  ship plane
Predicted:    cat   car  ship plane

 Test on all images
Accuracy of the network on the 10000 test images: 62 %

Class Accuracy

Accuracy of plane : 79 %
Accuracy of   car : 65 %
Accuracy of  bird : 44 %
Accuracy of   cat : 34 %
Accuracy of  deer : 46 %
Accuracy of   dog : 50 %
Accuracy of  frog : 71 %
Accuracy of horse : 84 %
Accuracy of  ship : 72 %
Accuracy of truck : 79 %

real time:2538.60
Calculations done with cpu

Loading in Datasets

Batch Size: 100
Files already downloaded and verified
Files already downloaded and verified

Viewing Random Training Images

truck  frog   car truck

Creating Neural Network


Create Loss function and optimizer


Training Network

[1,   100] loss: 0.115
[1,   200] loss: 0.115
[1,   300] loss: 0.115
[1,   400] loss: 0.115
[1,   500] loss: 0.114
[2,   100] loss: 0.112
[2,   200] loss: 0.109
[2,   300] loss: 0.105
[2,   400] loss: 0.101
[2,   500] loss: 0.099
[3,   100] loss: 0.097
[3,   200] loss: 0.094
[3,   300] loss: 0.092
[3,   400] loss: 0.090
[3,   500] loss: 0.089
[4,   100] loss: 0.087
[4,   200] loss: 0.086
[4,   300] loss: 0.084
[4,   400] loss: 0.082
[4,   500] loss: 0.082
[5,   100] loss: 0.081
[5,   200] loss: 0.080
[5,   300] loss: 0.080
[5,   400] loss: 0.078
[5,   500] loss: 0.078
[6,   100] loss: 0.076
[6,   200] loss: 0.076
[6,   300] loss: 0.074
[6,   400] loss: 0.075
[6,   500] loss: 0.075
[7,   100] loss: 0.074
[7,   200] loss: 0.072
[7,   300] loss: 0.072
[7,   400] loss: 0.072
[7,   500] loss: 0.071
[8,   100] loss: 0.071
[8,   200] loss: 0.071
[8,   300] loss: 0.070
[8,   400] loss: 0.069
[8,   500] loss: 0.068
[9,   100] loss: 0.069
[9,   200] loss: 0.068
[9,   300] loss: 0.067
[9,   400] loss: 0.067
[9,   500] loss: 0.066
[10,   100] loss: 0.066
[10,   200] loss: 0.066
[10,   300] loss: 0.066
[10,   400] loss: 0.066
[10,   500] loss: 0.065
[11,   100] loss: 0.064
[11,   200] loss: 0.064
[11,   300] loss: 0.064
[11,   400] loss: 0.063
[11,   500] loss: 0.062
[12,   100] loss: 0.063
[12,   200] loss: 0.062
[12,   300] loss: 0.062
[12,   400] loss: 0.061
[12,   500] loss: 0.061
[13,   100] loss: 0.059
[13,   200] loss: 0.061
[13,   300] loss: 0.060
[13,   400] loss: 0.060
[13,   500] loss: 0.059
[14,   100] loss: 0.059
[14,   200] loss: 0.058
[14,   300] loss: 0.058
[14,   400] loss: 0.060
[14,   500] loss: 0.059
[15,   100] loss: 0.058
[15,   200] loss: 0.057
[15,   300] loss: 0.057
[15,   400] loss: 0.057
[15,   500] loss: 0.057
[16,   100] loss: 0.056
[16,   200] loss: 0.057
[16,   300] loss: 0.056
[16,   400] loss: 0.055
[16,   500] loss: 0.055
[17,   100] loss: 0.054
[17,   200] loss: 0.054
[17,   300] loss: 0.055
[17,   400] loss: 0.055
[17,   500] loss: 0.054
[18,   100] loss: 0.053
[18,   200] loss: 0.054
[18,   300] loss: 0.052
[18,   400] loss: 0.052
[18,   500] loss: 0.053
[19,   100] loss: 0.051
[19,   200] loss: 0.052
[19,   300] loss: 0.052
[19,   400] loss: 0.052
[19,   500] loss: 0.052
[20,   100] loss: 0.051
[20,   200] loss: 0.051
[20,   300] loss: 0.051
[20,   400] loss: 0.051
[20,   500] loss: 0.050

Finished Training


Save trained Model


Test the network

Test on Some test images
GroundTruth:    cat  ship  ship plane
Predicted:    cat  ship   car plane

 Test on all images
Accuracy of the network on the 10000 test images: 63 %

Class Accuracy

Accuracy of plane : 79 %
Accuracy of   car : 78 %
Accuracy of  bird : 42 %
Accuracy of   cat : 25 %
Accuracy of  deer : 51 %
Accuracy of   dog : 56 %
Accuracy of  frog : 73 %
Accuracy of horse : 81 %
Accuracy of  ship : 70 %
Accuracy of truck : 68 %

real time:2546.83
Calculations done with cpu

Loading in Datasets

Batch Size: 100
Files already downloaded and verified
Files already downloaded and verified

Viewing Random Training Images

horse  frog horse  deer

Creating Neural Network


Create Loss function and optimizer


Training Network

[1,   100] loss: 0.115
[1,   200] loss: 0.115
[1,   300] loss: 0.115
[1,   400] loss: 0.114
[1,   500] loss: 0.114
[2,   100] loss: 0.112
[2,   200] loss: 0.109
[2,   300] loss: 0.105
[2,   400] loss: 0.102
[2,   500] loss: 0.099
[3,   100] loss: 0.096
[3,   200] loss: 0.095
[3,   300] loss: 0.094
[3,   400] loss: 0.092
[3,   500] loss: 0.090
[4,   100] loss: 0.088
[4,   200] loss: 0.086
[4,   300] loss: 0.085
[4,   400] loss: 0.083
[4,   500] loss: 0.082
[5,   100] loss: 0.081
[5,   200] loss: 0.080
[5,   300] loss: 0.079
[5,   400] loss: 0.078
[5,   500] loss: 0.076
[6,   100] loss: 0.077
[6,   200] loss: 0.075
[6,   300] loss: 0.075
[6,   400] loss: 0.074
[6,   500] loss: 0.074
[7,   100] loss: 0.073
[7,   200] loss: 0.072
[7,   300] loss: 0.073
[7,   400] loss: 0.072
[7,   500] loss: 0.070
[8,   100] loss: 0.070
[8,   200] loss: 0.071
[8,   300] loss: 0.070
[8,   400] loss: 0.069
[8,   500] loss: 0.069
[9,   100] loss: 0.068
[9,   200] loss: 0.068
[9,   300] loss: 0.068
[9,   400] loss: 0.067
[9,   500] loss: 0.067
[10,   100] loss: 0.067
[10,   200] loss: 0.065
[10,   300] loss: 0.065
[10,   400] loss: 0.065
[10,   500] loss: 0.065
[11,   100] loss: 0.065
[11,   200] loss: 0.064
[11,   300] loss: 0.063
[11,   400] loss: 0.064
[11,   500] loss: 0.063
[12,   100] loss: 0.063
[12,   200] loss: 0.063
[12,   300] loss: 0.061
[12,   400] loss: 0.062
[12,   500] loss: 0.062
[13,   100] loss: 0.061
[13,   200] loss: 0.061
[13,   300] loss: 0.060
[13,   400] loss: 0.060
[13,   500] loss: 0.061
[14,   100] loss: 0.059
[14,   200] loss: 0.059
[14,   300] loss: 0.059
[14,   400] loss: 0.058
[14,   500] loss: 0.059
[15,   100] loss: 0.058
[15,   200] loss: 0.057
[15,   300] loss: 0.058
[15,   400] loss: 0.057
[15,   500] loss: 0.057
[16,   100] loss: 0.057
[16,   200] loss: 0.056
[16,   300] loss: 0.056
[16,   400] loss: 0.057
[16,   500] loss: 0.055
[17,   100] loss: 0.054
[17,   200] loss: 0.056
[17,   300] loss: 0.054
[17,   400] loss: 0.055
[17,   500] loss: 0.055
[18,   100] loss: 0.053
[18,   200] loss: 0.054
[18,   300] loss: 0.053
[18,   400] loss: 0.054
[18,   500] loss: 0.054
[19,   100] loss: 0.053
[19,   200] loss: 0.052
[19,   300] loss: 0.053
[19,   400] loss: 0.053
[19,   500] loss: 0.052
[20,   100] loss: 0.052
[20,   200] loss: 0.050
[20,   300] loss: 0.052
[20,   400] loss: 0.051
[20,   500] loss: 0.051

Finished Training


Save trained Model


Test the network

Test on Some test images
GroundTruth:    cat  ship  ship plane
Predicted:    cat  ship  ship plane

 Test on all images
Accuracy of the network on the 10000 test images: 62 %

Class Accuracy

Accuracy of plane : 68 %
Accuracy of   car : 68 %
Accuracy of  bird : 31 %
Accuracy of   cat : 46 %
Accuracy of  deer : 48 %
Accuracy of   dog : 50 %
Accuracy of  frog : 71 %
Accuracy of horse : 78 %
Accuracy of  ship : 79 %
Accuracy of truck : 79 %

real time:2631.10
Calculations done with cpu

Loading in Datasets

Batch Size: 100
Files already downloaded and verified
Files already downloaded and verified

Viewing Random Training Images

 deer   dog truck plane

Creating Neural Network


Create Loss function and optimizer


Training Network

[1,   100] loss: 0.115
[1,   200] loss: 0.115
[1,   300] loss: 0.115
[1,   400] loss: 0.115
[1,   500] loss: 0.114
[2,   100] loss: 0.113
[2,   200] loss: 0.110
[2,   300] loss: 0.106
[2,   400] loss: 0.102
[2,   500] loss: 0.100
[3,   100] loss: 0.097
[3,   200] loss: 0.095
[3,   300] loss: 0.093
[3,   400] loss: 0.091
[3,   500] loss: 0.089
[4,   100] loss: 0.088
[4,   200] loss: 0.086
[4,   300] loss: 0.085
[4,   400] loss: 0.083
[4,   500] loss: 0.082
[5,   100] loss: 0.081
[5,   200] loss: 0.080
[5,   300] loss: 0.079
[5,   400] loss: 0.078
[5,   500] loss: 0.078
[6,   100] loss: 0.077
[6,   200] loss: 0.076
[6,   300] loss: 0.076
[6,   400] loss: 0.075
[6,   500] loss: 0.075
[7,   100] loss: 0.074
[7,   200] loss: 0.073
[7,   300] loss: 0.072
[7,   400] loss: 0.072
[7,   500] loss: 0.071
[8,   100] loss: 0.071
[8,   200] loss: 0.070
[8,   300] loss: 0.070
[8,   400] loss: 0.069
[8,   500] loss: 0.070
[9,   100] loss: 0.069
[9,   200] loss: 0.068
[9,   300] loss: 0.068
[9,   400] loss: 0.068
[9,   500] loss: 0.067
[10,   100] loss: 0.066
[10,   200] loss: 0.066
[10,   300] loss: 0.066
[10,   400] loss: 0.065
[10,   500] loss: 0.065
[11,   100] loss: 0.064
[11,   200] loss: 0.064
[11,   300] loss: 0.063
[11,   400] loss: 0.063
[11,   500] loss: 0.063
[12,   100] loss: 0.062
[12,   200] loss: 0.062
[12,   300] loss: 0.062
[12,   400] loss: 0.061
[12,   500] loss: 0.061
[13,   100] loss: 0.060
[13,   200] loss: 0.060
[13,   300] loss: 0.060
[13,   400] loss: 0.059
[13,   500] loss: 0.060
[14,   100] loss: 0.059
[14,   200] loss: 0.058
[14,   300] loss: 0.057
[14,   400] loss: 0.058
[14,   500] loss: 0.057
[15,   100] loss: 0.056
[15,   200] loss: 0.058
[15,   300] loss: 0.056
[15,   400] loss: 0.056
[15,   500] loss: 0.055
[16,   100] loss: 0.055
[16,   200] loss: 0.054
[16,   300] loss: 0.055
[16,   400] loss: 0.055
[16,   500] loss: 0.054
[17,   100] loss: 0.054
[17,   200] loss: 0.053
[17,   300] loss: 0.054
[17,   400] loss: 0.054
[17,   500] loss: 0.053
[18,   100] loss: 0.052
[18,   200] loss: 0.053
[18,   300] loss: 0.053
[18,   400] loss: 0.052
[18,   500] loss: 0.052
[19,   100] loss: 0.050
[19,   200] loss: 0.052
[19,   300] loss: 0.052
[19,   400] loss: 0.051
[19,   500] loss: 0.052
[20,   100] loss: 0.050
[20,   200] loss: 0.051
[20,   300] loss: 0.049
[20,   400] loss: 0.051
[20,   500] loss: 0.051

Finished Training


Save trained Model


Test the network

Test on Some test images
GroundTruth:    cat  ship  ship plane
Predicted:    cat  ship  ship  ship

 Test on all images
Accuracy of the network on the 10000 test images: 63 %

Class Accuracy

Accuracy of plane : 70 %
Accuracy of   car : 71 %
Accuracy of  bird : 31 %
Accuracy of   cat : 23 %
Accuracy of  deer : 57 %
Accuracy of   dog : 46 %
Accuracy of  frog : 77 %
Accuracy of horse : 75 %
Accuracy of  ship : 77 %
Accuracy of truck : 75 %

real time:2579.89
Calculations done with cpu

Loading in Datasets

Batch Size: 100
Files already downloaded and verified
Files already downloaded and verified

Viewing Random Training Images

 bird  ship  bird   dog

Creating Neural Network


Create Loss function and optimizer


Training Network

